{"ast":null,"code":"import*as types from\"./../constants\";export var getUserAction=function getUserAction(){return function(dispatch){return fetch(\"/api/check/token\").then(function(response){return response.json();}).then(function(json){dispatch({type:types.LOGIN_REQUEST,payload:json});});};};export var logginAction=function logginAction(values){return function(dispatch){return fetch(\"/api/auth/login\",{method:\"POST\",body:JSON.stringify(values),headers:{\"Content-Type\":\"application/json\"}}).then(function(res){dispatch(getUserAction());}).catch(function(err){console.error(err);alert(\"Error logging in please try again\");});};};export var logoutAction=function logoutAction(){return function(dispatch){return fetch(\"/api/auth/logout\").then(function(response){dispatch({type:types.LOGOUT});});};};","map":{"version":3,"sources":["/home/lysa/Bureau/auth-redux-jwt/client/src/actions/index.js"],"names":["types","getUserAction","dispatch","fetch","then","response","json","type","LOGIN_REQUEST","payload","logginAction","values","method","body","JSON","stringify","headers","res","catch","err","console","error","alert","logoutAction","LOGOUT"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,gBAAvB,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACjC,MAAO,UAAAC,QAAQ,CAAI,CACjB,MAAOC,CAAAA,KAAK,CAAC,kBAAD,CAAL,CACJC,IADI,CACC,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADT,EAEJF,IAFI,CAEC,SAAAE,IAAI,CAAI,CACZJ,QAAQ,CAAC,CAAEK,IAAI,CAAEP,KAAK,CAACQ,aAAd,CAA6BC,OAAO,CAAEH,IAAtC,CAAD,CAAR,CACD,CAJI,CAAP,CAKD,CAND,CAOD,CARM,CAUP,MAAO,IAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,MAAM,CAAI,CACpC,MAAO,UAAAT,QAAQ,CAAI,CACjB,MAAOC,CAAAA,KAAK,CAAC,iBAAD,CAAoB,CAC9BS,MAAM,CAAE,MADsB,CAE9BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAFwB,CAG9BK,OAAO,CAAE,CACP,eAAgB,kBADT,CAHqB,CAApB,CAAL,CAOJZ,IAPI,CAOC,SAAAa,GAAG,CAAI,CACXf,QAAQ,CAACD,aAAa,EAAd,CAAR,CACD,CATI,EAUJiB,KAVI,CAUE,SAAAC,GAAG,CAAI,CACZC,OAAO,CAACC,KAAR,CAAcF,GAAd,EACAG,KAAK,CAAC,mCAAD,CAAL,CACD,CAbI,CAAP,CAcD,CAfD,CAgBD,CAjBM,CAmBP,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CAChC,MAAO,UAAArB,QAAQ,CAAI,CACjB,MAAOC,CAAAA,KAAK,CAAC,kBAAD,CAAL,CAA0BC,IAA1B,CAA+B,SAAAC,QAAQ,CAAI,CAChDH,QAAQ,CAAC,CAAEK,IAAI,CAAEP,KAAK,CAACwB,MAAd,CAAD,CAAR,CACD,CAFM,CAAP,CAGD,CAJD,CAKD,CANM","sourcesContent":["import * as types from \"./../constants\";\n\nexport const getUserAction = () => {\n  return dispatch => {\n    return fetch(\"/api/check/token\")\n      .then(response => response.json())\n      .then(json => {\n        dispatch({ type: types.LOGIN_REQUEST, payload: json });\n      });\n  };\n};\n\nexport const logginAction = values => {\n  return dispatch => {\n    return fetch(\"/api/auth/login\", {\n      method: \"POST\",\n      body: JSON.stringify(values),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        dispatch(getUserAction());\n      })\n      .catch(err => {\n        console.error(err);\n        alert(\"Error logging in please try again\");\n      });\n  };\n};\n\nexport const logoutAction = () => {\n  return dispatch => {\n    return fetch(\"/api/auth/logout\").then(response => {\n      dispatch({ type: types.LOGOUT });\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}